{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-c","title":"KIT-C","text":"<p>Mariana Albuquerque</p> <p>Lucas Novais</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"projeto/main/","title":"Projeto API","text":"<p>Esta API RESTful prov\u00ea cadastro e autentica\u00e7\u00e3o de usu\u00e1rios e um endpoint de consulta que realiza scraping em tempo\u2011real das \u00faltimas 10 not\u00edcias do site Hacker News.</p> <p>https://news.ycombinator.com/</p> <p>Autores: Lucas Novais e Mariana Albuquerque</p>"},{"location":"projeto/main/#etapa-1-construcao-da-api-e-dockerinzing","title":"Etapa 1: Constru\u00e7\u00e3o da API e Dockerinzing","text":""},{"location":"projeto/main/#1-link-rapido","title":"1\u00a0\u00b7\u00a0 Link r\u00e1pido","text":"<ul> <li>Projeto no GitHub: https://github.com/lucasnov/fastapi-with-postgree</li> <li>Imagem no Docker Hub: https://hub.docker.com/r/lucasnov/projeto1</li> </ul>"},{"location":"projeto/main/#2-endpoints","title":"2\u00a0\u00b7\u00a0 Endpoints","text":"M\u00e9todo Rota Descri\u00e7\u00e3o Autentica\u00e7\u00e3o <code>POST</code> <code>/registrar</code> Cria novo usu\u00e1rio \u274c <code>POST</code> <code>/login</code> Retorna JWT \u274c <code>GET</code> <code>/consultar</code> Scraping Hacker News (Top\u201110) \u2705 (Bearer) <code>GET</code> <code>/health-check</code> Status da API \u274c <p>OpenAPI</p> <p>A p\u00e1gina Swagger \u00e9 servida em <code>http://localhost:8000/docs</code>.</p> <pre><code>sequenceDiagram\n    participant Cliente\n    participant API\n    participant DB\n\n    Cliente-&gt;&gt;API: POST /registrar\n    API-&gt;&gt;DB: INSERT users\n    API--&gt;&gt;Cliente: 201 Created\n\n    Cliente-&gt;&gt;API: POST /login\n    API-&gt;&gt;DB: SELECT users\n    API--&gt;&gt;Cliente: 200 JWT</code></pre>"},{"location":"projeto/main/#3-arquitetura","title":"3\u00a0\u00b7\u00a0Arquitetura","text":"<pre><code>flowchart LR\n    subgraph DockerCompose [\"Rede Default\"]\n        direction LR\n        A[FastAPI] -- TCP 5432 --&gt; B[PostgreSQL 15]\n    end\n    U[Usu\u00e1rio Browser /cURL] -- HTTP 8000 --&gt; A\n</code></pre>"},{"location":"projeto/main/#4-seguranca","title":"4\u00a0\u00b7\u00a0Seguran\u00e7a","text":"<ul> <li>JWT de 24\u00a0h.</li> <li>Hash de senha bcrypt (<code>passlib</code>).</li> <li>Vari\u00e1veis sens\u00edveis via <code>.env</code>.</li> </ul>"},{"location":"projeto/main/#5-execucao-local","title":"5\u00a0\u00b7\u00a0Execu\u00e7\u00e3o Local","text":"<p>Requisitos m\u00ednimos testados Docker 20.10 ou superior (j\u00e1 inclui o Docker Compose V2 embutido no CLI).</p>"},{"location":"projeto/main/#a-clonar-o-repositorio","title":"a.\u2008 Clonar o reposit\u00f3rio","text":"<pre><code>git clone https://github.com/lucasnov/fastapi-with-postgree.git\ncd fastapi-with-postgree       # todos os comandos abaixo rodam na raiz do projeto\n</code></pre>"},{"location":"projeto/main/#b-configurar-variaveis-de-ambiente","title":"b.\u2008 Configurar vari\u00e1veis de ambiente","text":"<p>Copie o arquivo de exemplo e ajuste credenciais, se necess\u00e1rio:</p> <pre><code>cp .env.example .env\n# edite .env (POSTGRES_USER, POSTGRES_PASSWORD, JWT_SECRET_KEY, etc.)\n</code></pre> .env.example <pre><code>POSTGRES_USER=projeto\nPOSTGRES_PASSWORD=S3cur3P@ss\nPOSTGRES_DB=projeto\nPOSTGRES_HOST=db\nDATABASE_URL=postgresql://projeto:S3cur3P%40ss@db:5432/projeto\nJWT_SECRET_KEY=my_super_secret_jwt_key\n</code></pre>"},{"location":"projeto/main/#c-subir-a-stack-com-docker-compose","title":"c.\u2008 Subir a stack com Docker Compose","text":"<pre><code># inicializa containers em segundo plano\ndocker compose up -d\n</code></pre>"},{"location":"projeto/main/#6-testando-os-endpoints","title":"6\u00a0\u00b7\u00a0Testando os Endpoints","text":""},{"location":"projeto/main/#health-check","title":"/health-check:","text":"<pre><code>curl -X GET 'http://localhost:8000/health-check' \\\n     -H 'accept: application/json'\n</code></pre>"},{"location":"projeto/main/#registrar","title":"/registrar:","text":"<pre><code>curl -X POST 'http://localhost:8000/registrar' \\\n     -H 'accept: application/json' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\n           \"name\": \"Lucas\",\n           \"email\": \"lucas@example.com\",\n           \"password\": \"123456\"\n         }'\n</code></pre>"},{"location":"projeto/main/#login","title":"/login:","text":"<pre><code>curl -X POST 'http://localhost:8000/login' \\\n     -H 'accept: application/json' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\n           \"email\": \"lucas@example.com\",\n           \"password\": \"123456\"\n         }'\n</code></pre>"},{"location":"projeto/main/#consultar","title":"/consultar","text":"<pre><code>TOKEN=\"EYJHBGCI6...COPIE_DA_RESPOSTA_DO_LOGIN\"\n\ncurl -X GET 'http://localhost:8000/consultar' \\\n     -H 'accept: application/json' \\\n     -H \"Authorization: Bearer ${TOKEN}\"\n</code></pre>"},{"location":"projeto/main/#7-pipeline-de-deploy","title":"7\u00a0\u00b7\u00a0Pipeline de Deploy","text":""},{"location":"projeto/main/#docker-hub","title":"Docker Hub:","text":"<pre><code># Depois de logado no devido usu\u00e1rio\n\n# Build\ndocker build -t lucasnov/projeto1:v1 .\n\n# Push\ndocker push lucasnov/projeto1:v1\ndocker tag lucasnov/projeto1:v1 lucasnov/projeto1:latest\ndocker push lucasnov/projeto1:latest\n</code></pre>"},{"location":"projeto/main/#8-composeyaml-final","title":"8\u00a0\u00b7\u00a0compose.yaml final","text":"<pre><code>services:\n  db:\n    image: postgres:15\n    restart: unless-stopped\n    hostname: db\n    environment:\n      POSTGRES_USER: ${POSTGRES_USER:-projeto}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-S3cur3P@ss}\n      POSTGRES_DB: ${POSTGRES_DB:-projeto}\n      DATABASE_URL: ${POSTGRES_HOST:-db}\n    ports:\n      - \"5432:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U $${POSTGRES_USER:-projeto} -d $${POSTGRES_DB:-projeto}\"]\n      interval: 5s\n      timeout: 5s\n      retries: 10\n      start_period: 10s\n\n  app:\n    image: lucasnov/projeto1:v1\n    ports:\n      - \"8000:8000\"\n    env_file:\n      - .env\n    ## depende do estado \u201chealthy\u201d do db\n    depends_on:\n      db:\n        condition: service_healthy\n</code></pre> <p>O <code>compose.yaml</code> est\u00e1 na raiz do reposit\u00f3rio.</p>"},{"location":"projeto/main/#9-video-de-demonstracao","title":"9\u00a0\u00b7\u00a0V\u00eddeo de demonstra\u00e7\u00e3o","text":"<p>YouTube: https://youtu.be/b8PeB0G_bvI.</p>"},{"location":"projeto/main/#etapa-2-deploy-na-aws-lightsail","title":"Etapa 2: Deploy na AWS\u00a0Lightsail","text":"<p>O objetivo desta etapa foi publicar a mesma stack FastAPI\u00a0+ PostgreSQL na nuvem, utilizando Lightsail Container Service para a aplica\u00e7\u00e3o e Lightsail Managed Database para o banco.</p>"},{"location":"projeto/main/#1-link-rapido_1","title":"1\u00a0\u00b7\u00a0 Link r\u00e1pido","text":"<ul> <li>Swagger da API: https://fastapi-service.n3a1c9dx898r2.us-east-1.cs.amazonlightsail.com/docs</li> </ul>"},{"location":"projeto/main/#2-passoapasso-de-publicacao","title":"2\u00a0\u00b7\u00a0Passo\u2011a\u2011passo de publica\u00e7\u00e3o","text":"<pre><code>sequenceDiagram\n    autonumber\n    participant Dev\n    participant DockerHub\n    participant Lightsail\n    participant DB as \"Lightsail\u00a0DB\"\n    Dev-&gt;&gt;DockerHub: docker push lucasnov/projeto1:v1\n    Dev-&gt;&gt;Lightsail: create container\u2011service\\n(app lucasnov/projeto1:v1)\n    Lightsail--&gt;&gt;Dev: Endpoint HTTPS\n    Dev-&gt;&gt;DB: create database fastapi-db\n    Dev-&gt;&gt;Lightsail: update env vars (DATABASE_URL\u2026)\n    Lightsail--&gt;&gt;Dev: Health\u00a0\u2714</code></pre> <ol> <li>Imagem pronta no Docker\u202fHub \u2013 <code>lucasnov/projeto1:v1</code>.</li> <li>Cria\u00e7\u00e3o do container service </li> <li>Service name: <code>fastapi-service</code> </li> <li>Power: Micro\u00a01\u202fGB, US\u00a0$\u00a010 (primeiros 90\u00a0dias free).</li> <li>Scale: 1 n\u00f3  </li> <li>Public endpoint: porta 8000 com health\u2011check em <code>/health-check</code>.</li> <li>Cria\u00e7\u00e3o do banco gerenciado </li> <li>Plan: Standard\u00a01\u202fGB, US\u00a0$\u00a015 (primeiros 90\u00a0dias free).  </li> <li> <p>Public mode: on para permitir acesso externo.</p> <p></p> </li> <li> <p>Vari\u00e1veis de ambiente configuradas no container.</p> </li> <li> <p>Deploy \u2192 <code>Save &amp; deploy</code> (ou <code>aws lightsail create-container-service-deployment \u2026</code>).</p> <p></p> </li> </ol>"},{"location":"projeto/main/#3-arquitetura-final","title":"3\u00a0\u00b7\u00a0Arquitetura final","text":"<pre><code>graph LR\n    U[Usu\u00e1rio] -- HTTPS 443 --&gt; C[Container Service: FastAPI]\n    C -- TCP 5432 --&gt; D[Managed PostgreSQL 1 GB]\n    classDef box fill:#F3F4F6,stroke:#CBD5E1,stroke-width:1px;\n    class C,D box;</code></pre> <ul> <li>Plano do container: Micro\u00a01\u202fGB RAM, 0\u202f.25\u00a0vCPU (trial 90\u202fdias)</li> </ul> <ul> <li>Plano do banco: Standard\u00a01\u202fGB, 2\u00a0vCPU, 40\u202fGB\u202fSSD (trial 90\u202fdias).</li> </ul>"},{"location":"projeto/main/#4-recursos-alocados-custos","title":"4\u00a0\u00b7\u00a0Recursos alocados &amp; custos","text":"<p>Per\u00edodo gratuito de 90 dias \u2013 Tanto o plano Micro do Container Service (1 GB) quanto o plano Standard 1 GB do banco gerenciado t\u00eam isen\u00e7\u00e3o total nos tr\u00eas primeiros meses para a primeira inst\u00e2ncia de cada servi\u00e7o. Enquanto essa franquia estiver ativa, n\u00e3o haver\u00e1 cobran\u00e7as mensais.</p> <p></p> <p></p>"},{"location":"projeto/main/#projecao-para-custos-normais-fora-do-periodo-gratuito","title":"Proje\u00e7\u00e3o para custos normais (fora do per\u00edodo gratuito)","text":"Item Plano Pre\u00e7o Qtde Sub\u2011total Container\u00a0Service Micro (1\u202fGB) US\u00a0$\u00a010 1 n\u00f3 US\u00a0$\u00a010 Database Standard 1\u202fGB US\u00a0$\u00a015 1 US\u00a0$\u00a015 Total (ap\u00f3s 90\u202fdias) US\u00a0$\u00a025 /\u00a0m\u00eas"},{"location":"projeto/main/#projecao-para-escalas-exigidas-us-50","title":"Proje\u00e7\u00e3o para escalas exigidas (\u2264\u00a0US\u00a0$\u00a050)","text":"R\u00e9plicas N\u00f3s Micro Custo Container +\u00a0DB 1\u202fGB Total 1 1 1\u202f\u00d7\u202f10 = 10 15 25 5 5 5\u202f\u00d7\u202f10 = 50 15 65 \u26a0 10 10 10\u202f\u00d7\u202f10 = 100 15 115 \ud83d\udeab <p>Para 5 n\u00f3s dentro do limite basta trocar para Nano (US\u00a0$\u00a07) \u2192 5\u202f\u00d7\u202f7\u00a0+\u00a015\u00a0=\u00a050.</p>"},{"location":"projeto/main/#5-funcionando-na-nuvem","title":"5\u00a0\u00b7\u00a0Funcionando na Nuvem","text":""},{"location":"projeto/main/#api","title":"API:","text":""},{"location":"projeto/main/#banco-de-dados","title":"Banco de dados:","text":""},{"location":"projeto/main/#6-testando-os-endpoints_1","title":"6\u00a0\u00b7\u00a0Testando os Endpoints","text":""},{"location":"projeto/main/#health-check_1","title":"/health-check:","text":"<pre><code>curl -X GET 'https://fastapi-service.n3a1c9dx898r2.us-east-1.cs.amazonlightsail.com/health-check' \\\n     -H 'accept: application/json'\n</code></pre>"},{"location":"projeto/main/#registrar_1","title":"/registrar:","text":"<pre><code>curl -X POST 'https://fastapi-service.n3a1c9dx898r2.us-east-1.cs.amazonlightsail.com/registrar' \\\n     -H 'accept: application/json' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\n           \"name\": \"Lucas\",\n           \"email\": \"lucas@example.com\",\n           \"password\": \"123456\"\n         }'\n</code></pre>"},{"location":"projeto/main/#login_1","title":"/login:","text":"<pre><code>curl -X POST 'https://fastapi-service.n3a1c9dx898r2.us-east-1.cs.amazonlightsail.com/login' \\\n     -H 'accept: application/json' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\n           \"email\": \"lucas@example.com\",\n           \"password\": \"123456\"\n         }'\n</code></pre>"},{"location":"projeto/main/#consultar_1","title":"/consultar","text":"<pre><code>TOKEN=\"EYJHBGCI6...COPIE_DA_RESPOSTA_DO_LOGIN\"\n\ncurl -X GET 'https://fastapi-service.n3a1c9dx898r2.us-east-1.cs.amazonlightsail.com/consultar' \\\n     -H 'accept: application/json' \\\n     -H \"Authorization: Bearer ${TOKEN}\"\n</code></pre>"},{"location":"projeto/main/#7-video-de-demonstracao","title":"7\u00a0\u00b7\u00a0V\u00eddeo de demonstra\u00e7\u00e3o","text":"<p>YouTube: https://youtu.be/AqCB2RlE4mc.</p>"},{"location":"roteiro1/main/","title":"Relat\u00f3rio Roteiro 1 de Computa\u00e7\u00e3o em Nuvem","text":"<p>Autores: Lucas Novais, Mariana Albuquerque</p>"},{"location":"roteiro1/main/#1-objetivo","title":"1. Objetivo","text":"<p>O roteiro tem como objetivo aprender os conceitos b\u00e1sicos sobre redes, subredes e o hardware que comp\u00f5em essas entidades. Ademais, o aprendizado sobre a manipula\u00e7\u00e3o de plataformas de gerenciamento desse hardware.</p> <p>Hardware (Bare Metal):</p> <ul> <li>1 NUC (main) com 10Gb e 1 SSD (120Gb)  </li> <li>1 NUC (server1) com 12Gb e 1 SSD (120Gb)  </li> <li>1 NUC (server2) com 16Gb e 2 SSD (120Gb + 120Gb)  </li> <li>3 NUCs (server3, server4 e server5) com 32Gb e 2 SSD (120Gb + 120Gb)  </li> <li>1 Switch DLink DSG-1210-28 de 28 portas  </li> <li>1 Roteador TP-Link TL-R470T+</li> </ul>"},{"location":"roteiro1/main/#2-infraestrutura","title":"2. Infraestrutura","text":"<p>Para operarmos em uma rede privada, foi necess\u00e1rio configurar o switch, o roteador e os NUCs, para que todos conversassem na mesma rede atrav\u00e9s do IP <code>172.16.0.X</code>.</p> <p>Al\u00e9m da modifica\u00e7\u00e3o dos IPs, fizemos um NAT para permitir o acesso remoto quando estiv\u00e9ssemos logados na rede do Insper.</p>"},{"location":"roteiro1/main/#3-app","title":"3. App","text":"<p>Ap\u00f3s a configura\u00e7\u00e3o da infraestrutura, foi instalado o PostgreSQL no <code>server1</code>, que serve como nosso banco de dados.</p> <p></p> <p>Verificamos a conex\u00e3o com sucesso \u2014 o status est\u00e1 como \u201cAtivo\u201d, acess\u00edvel a partir da m\u00e1quina MAIN. O servi\u00e7o est\u00e1 rodando na porta configurada pelo PostgreSQL.</p> <p></p> <p>Foi verificado que o banco de dados est\u00e1 conectado a porta <code>5432</code>, que \u00e9 a porta padr\u00e3o do PostgreSQL. </p>"},{"location":"roteiro1/main/#31-acesso-ao-maas","title":"3.1 Acesso ao MAAS","text":"<p>A partir da m\u00e1quina em que foi implantado, acessamos o dashboard do MAAS.</p> <p></p>"},{"location":"roteiro1/main/#311-aba-de-imagens","title":"3.1.1 Aba de Imagens","text":""},{"location":"roteiro1/main/#312-testes-e-commissioning","title":"3.1.2 Testes e Commissioning","text":""},{"location":"roteiro1/main/#server1","title":"Server1","text":""},{"location":"roteiro1/main/#server2","title":"Server2","text":""},{"location":"roteiro1/main/#server3","title":"Server3","text":""},{"location":"roteiro1/main/#server4","title":"Server4","text":""},{"location":"roteiro1/main/#server5","title":"Server5","text":""},{"location":"roteiro1/main/#dashboard-do-maas-com-as-duas-maquinas-e-seus-respecitivos-ips","title":"Dashboard do MAAS com as duas m\u00e1quinas e seus respecitivos IPs","text":""},{"location":"roteiro1/main/#32-aplicacao-django","title":"3.2 Aplica\u00e7\u00e3o Django","text":""},{"location":"roteiro1/main/#321-print-da-aplicacao-conectada-ao-server","title":"3.2.1 Print da aplica\u00e7\u00e3o conectada ao server","text":""},{"location":"roteiro1/main/#322-configuracao-manual-do-postgresql","title":"3.2.2 Configura\u00e7\u00e3o manual do PostgreSQL","text":"<p>Instalamos o <code>postgres</code> no <code>server1</code>, criamos um usu\u00e1rio e um banco para a aplica\u00e7\u00e3o. Editamos as configura\u00e7\u00f5es do <code>postgresql.conf</code> para permitir conex\u00f5es remotas e adicionamos uma linha em <code>pg_hba.conf</code> para permitir acessos da subnet por qualquer m\u00e1quina.</p>"},{"location":"roteiro1/main/#323-deploy-do-django-no-server2","title":"3.2.3 Deploy do Django no Server2","text":"<p>Realizamos o login pelo terminal via MAAS, requisitamos o <code>server2</code>, fizemos o deploy e clonagem do reposit\u00f3rio. Ap\u00f3s reboot, foi criado um t\u00fanel SSH \u2014 dispensando a necessidade de NAT.</p>"},{"location":"roteiro1/main/#324-expansao-para-multiplos-servidores","title":"3.2.4 Expans\u00e3o para m\u00faltiplos servidores","text":""},{"location":"roteiro1/main/#maas-com-3-maquinas","title":"MAAS com 3 m\u00e1quinas","text":""},{"location":"roteiro1/main/#django-no-server2","title":"Django no Server2","text":""},{"location":"roteiro1/main/#django-no-server3","title":"Django no Server3","text":""},{"location":"roteiro1/main/#33-comparacao-manual-vs-ansible","title":"3.3 Compara\u00e7\u00e3o: Manual vs Ansible","text":"<p>O Ansible \u00e9 mais recomendado para cen\u00e1rios com m\u00faltiplos servidores por sua escalabilidade, consist\u00eancia e velocidade de configura\u00e7\u00e3o.</p>"},{"location":"roteiro1/main/#maas-com-4-maquinas","title":"MAAS com 4 m\u00e1quinas","text":""},{"location":"roteiro1/main/#34-load-balancing-com-nginx","title":"3.4 Load Balancing com Nginx","text":""},{"location":"roteiro1/main/#reverse-proxy-no-server4","title":"Reverse Proxy no Server4","text":"<p>Criamos um proxy reverso com o <code>Nginx</code> no <code>server4</code>, que encaminha requisi\u00e7\u00f5es alternadamente para os <code>server2</code> e <code>server3</code>.</p>"},{"location":"roteiro1/main/#testes-com-get-request","title":"Testes com <code>GET</code> Request:","text":"<ul> <li> <p>T\u00fanel para o server4 batendo no server2 </p> </li> <li> <p>T\u00fanel para o server4 batendo no server3 </p> </li> </ul>"},{"location":"roteiro1/main/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Dashboard MAAS</li> <li>PostgreSQL</li> <li>Django + SSH Tunneling</li> <li>Nginx como Load Balancer</li> </ul> <pre><code>sudo snap install maas --channel=3.5/Stable\n</code></pre> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":""},{"location":"roteiro1/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro1/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro? --&gt;</p>"},{"location":"roteiro2/main/","title":"Relat\u00f3rio Roteiro 2 de Computa\u00e7\u00e3o em Nuvem","text":"<p>Autores: Lucas Novais, Mariana Albuquerque</p>"},{"location":"roteiro2/main/#1-objetivo","title":"1. Objetivo","text":"<p>O roteiro tem como objetivo ensinar, na pr\u00e1tica, como orquestrar o deploy de aplica\u00e7\u00f5es em uma infraestrutura bare metal usando o Juju junto com o MAAS. A ideia \u00e9 mostrar como conectar essas ferramentas, criar um controlador e fazer o deploy de aplica\u00e7\u00f5es reais, como o Grafana e o Prometheus.</p> <p>Hardware utilizado (Bare Metal):</p> <ul> <li>1 NUC (main) com 10\u202fGB RAM e 1 SSD (120\u202fGB)  </li> <li>1 NUC (server1) com 12\u202fGB RAM e 1 SSD (120\u202fGB)  </li> <li>1 NUC (server2) com 16\u202fGB RAM e 2 SSD (120\u202fGB + 120\u202fGB)  </li> <li>1 NUC (server3) com 32\u202fGB RAM e 2 SSD (120\u202fGB + 120\u202fGB)  </li> <li>1 Switch DLink DSG-1210-28 (28 portas)  </li> <li>1 Roteador TP-Link TL-R470T+</li> </ul>"},{"location":"roteiro2/main/#2-infraestrutura","title":"2. Infraestrutura","text":"<p>Essa etapa do roteiro ensina como preparar a infraestrutura para o Juju usar o MAAS como provedor de m\u00e1quinas.</p> <ol> <li>Garantimos que as m\u00e1quinas estejam no estado \u201cReady\u201d no MAAS.  </li> <li>Instalamos o Juju no servidor principal com <code>snap</code>.  </li> <li>Criamos o <code>maas-creds.yaml</code> com a API Key do MAAS, permitindo a comunica\u00e7\u00e3o entre o Juju e o MAAS.  </li> <li>Inicializamos o controlador com <code>juju bootstrap</code>, escolhendo a m\u00e1quina <code>server1</code>.</li> </ol>"},{"location":"roteiro2/main/#3-deploy-de-aplicacoes","title":"3. Deploy de Aplica\u00e7\u00f5es","text":"<p>Ap\u00f3s preparar a infraestrutura:</p> <ol> <li>Instalamos o Dashboard do Juju no controlador para acompanhar visualmente os deploys.</li> <li>Garantimos o modelo correto com <code>juju models</code> e <code>juju switch</code>.</li> <li>Baixamos os charms do Grafana e Prometheus com <code>juju download</code>.</li> <li>Fizemos o deploy com:    ```bash    juju deploy ./prometheus2_XXX.charm    juju deploy ./grafana_XXX.charm</li> </ol>"},{"location":"roteiro2/main/#4-tarefa","title":"4. Tarefa","text":"<p>MAAS Dashboard com as m\u00e1quinas:</p> <p></p> <p>juju status com Grafana ativo:</p> <p></p> <p>Dashboard Grafana com Prometheus:</p> <p></p> <p>Acessando dashboard pela rede do Insper:</p> <p></p> <p>Aplica\u00e7\u00f5es ativas no Juju:</p> <p></p>"},{"location":"roteiro3/main/","title":"Relat\u00f3rio Roteiro 3 de Computa\u00e7\u00e3o em Nuvem","text":"<p>Autores: Lucas Novais, Mariana Albuquerque</p>"},{"location":"roteiro3/main/#1-objetivo","title":"1. Objetivo","text":"<p>O roteiro tem como objetivo entender os conceitos b\u00e1sicos de private cloud, bem como aprofundar conceitos sobre redes virtuais, sub-redes e o hardware que comp\u00f5em essas entidades. Ademais, o aprendizado sobre a manipula\u00e7\u00e3o de plataformas de gerenciamento desse hardware.</p>"},{"location":"roteiro3/main/#2-infraestrutura","title":"2. Infraestrutura","text":"<p>Para criarmos a infraestrutura necess\u00e1ria para este roteiro, precisamos implantar o Openstack, que \u00e9 uma plataforma de computa\u00e7\u00e3o em nuvem de c\u00f3digo aberto. O OpenStack permite a cria\u00e7\u00e3o e o gerenciamento de recursos de computa\u00e7\u00e3o, armazenamento e rede em ambientes de nuvem privada.</p>"},{"location":"roteiro3/main/#3-setup-do-openstack","title":"3. Setup do OpenStack","text":"<p>Nesta etapa, configuramos os servi\u00e7os que controlam as VMs, como o Nova, o Neutron, que gerencia a rede, o Cinder, que cuida do armazenamento, al\u00e9m de configurar o Horizon, que \u00e9 o painel de controle do OpenStack.</p>"},{"location":"roteiro3/main/#31-tarefa-1","title":"3.1 Tarefa 1","text":"<p>A) Verificar o status do Juju </p> <p>B) Dashboard MAAS </p> <p>C) Aba compute overview no OpenStack </p> <p>D) Aba compute instances no OpenStack </p> <p>E) Aba network topology no OpenStack </p>"},{"location":"roteiro3/main/#32-tarefa-2","title":"3.2 Tarefa 2","text":"<p>A. Dashboard do MAAS com as m\u00e1quinas </p> <p>B. Aba compute overview no OpenStack </p> <p>C. Aba compute instances no OpenStack </p> <p>D. Aba network topology no OpenStack </p> <ol> <li> <p>Enumere as diferen\u00e7as encontradas entre os prints das telas na Tarefa 1 e na Tarefa 2. Antes n\u00e3o havia nenhuma inst\u00e2ncia criada e agora temos uma instancia criada no OpenStack, al\u00e9m de uma rede virtual configurada. O dashboard do MAAS agora mostra as m\u00e1quinas dispon\u00edveis, e a aba de compute overview no OpenStack exibe informa\u00e7\u00f5es sobre as inst\u00e2ncias criadas. A aba de compute instances agora mostra a inst\u00e2ncia criada, e a aba de network topology exibe a rede virtual configurada.</p> </li> <li> <p>Explique como cada recurso foi criado. Para criar a inst\u00e2ncia, foi configurado pelo Horizon, o painel de controle do OpenStack. Foi necess\u00e1rio selecionar a imagem do Ubuntu Server 22.04, escolher o tipo de inst\u00e2ncia, alocar os recursos necess\u00e1rios (CPU, mem\u00f3ria e disco) e associar a inst\u00e2ncia \u00e0 rede virtual criada anteriormente. Ap\u00f3s isso, a inst\u00e2ncia foi lan\u00e7ada e ficou dispon\u00edvel para uso.</p> </li> </ol>"},{"location":"roteiro3/main/#33-tarefa-3","title":"3.3 Tarefa 3","text":"<p>Arquitetura de rede </p>"},{"location":"roteiro3/main/#34-tarefa-4","title":"3.4 Tarefa 4","text":"<ol> <li>Escreva um relat\u00f3rio dos passos utilizados. (Coloque em uma se\u00e7\u00e3o do material a ser entregue do roteiro - MkDocs!!!!!!!)</li> </ol> <p>Primeiramente, para levantar duas inst\u00e2ncias com a API do FastAPI, foi necess\u00e1rio criar uma rede virtual no OpenStack. Em seguida, foram criadas duas inst\u00e2ncias de m\u00e1quinas virtuais (VMs) com o Ubuntu Server 22.04, que serviram como servidores para a aplica\u00e7\u00e3o FastAPI. Essas VMs foram conectadas \u00e0 rede virtual criada anteriormente. Publicamos uma imagem do FastAPI no Docker Hub, e depois, instalamos o Docker nas VMs. Com o Docker instalado, baixamos a imagem do FastAPI e executamos os containers.</p> <p>Para o banco de dados, utilizamos o PostgreSQL, que foi instalado em uma das VMs. Configuramos o banco de dados para aceitar conex\u00f5es da rede virtual e criamos as tabelas necess\u00e1rias para a aplica\u00e7\u00e3o.</p> <p>Por fim, configuramos um balanceador de carga (Nginx) para distribuir as requisi\u00e7\u00f5es entre as duas inst\u00e2ncias do FastAPI. O Nginx foi instalado em uma VM separada, que tamb\u00e9m estava conectada \u00e0 rede virtual. Essa VM atuou como um ponto de entrada para as requisi\u00e7\u00f5es, encaminhando-as para as inst\u00e2ncias do FastAPI.</p> <ol> <li> <p>Anexe fotos e/ou diagramas contendo: arquitetura de rede da sua infraestrutura dentro do Dashboard do Openstack </p> </li> <li> <p>Lista de VMs utilizadas com nome e IPs alocados </p> </li> </ol> <p>Dashboard do FastAPI </p> <ol> <li>Prints, cada um demonstrando em qual server (m\u00e1quina f\u00edsica) cada inst\u00e2ncia foi alocada pelo OpenStack.</li> </ol> <p>Nginx </p> <p>FastAPI 1 </p> <p>FastAPI 2 </p> <p>PostgreSQL </p>"},{"location":"roteiro4/main/","title":"Relat\u00f3rio Roteiro 4 de Computa\u00e7\u00e3o em Nuvem","text":"<p>Autores: Lucas Novais, Mariana Albuquerque</p>"},{"location":"roteiro4/main/#1-objetivo","title":"1. Objetivo","text":"<p>O roteiro tem como objetivo compreender os conceitos de Infraestrutura como C\u00f3digo (IaC), que envolve o gerenciamento e provisionamento de infraestrutura por meio de c\u00f3digo ao inv\u00e9s de processos manuais e entender conceitos de SLA (Service Level Agreement) e DR (Disaster Recovery), que s\u00e3o essenciais para garantir a continuidade dos servi\u00e7os e proteger contra falhas ou desastres imprevistos. Utilizaremos a ferramenta Terraform para implementar esses conceitos.</p>"},{"location":"roteiro4/main/#2-infraestrutura","title":"2. Infraestrutura","text":"<p>Criamos no openstack um dom\u00ednio Alunos e criamos um projeto para cada aluno, alem de criar dois novos usu\u00e1rios, um para cada integrante. Atribuimos papeis de admin para os usu\u00e1rios, permitindo que eles tenham controle total sobre os recursos dentro de seus respectivos projetos.</p>"},{"location":"roteiro4/main/#3-app","title":"3. App","text":"<p>Foram criados os arquivos .tf dentro da pasta de projeto de cada um dos alunos. Moficamos os arquivos de configura\u00e7\u00e3o do Terraform para criarmos 2 inst\u00e2ncias para cada projeto. Foram feitas pequenas modifica\u00e7\u00f5es nos arquivos base para atender \u00e0s necessidades de cada aluno.</p> <p>Checkpoints Mariana</p> <ul> <li>Aba projects </li> </ul> <p></p> <ul> <li>Aba users</li> </ul> <p></p> <ul> <li>Compute overview</li> </ul> <p></p> <ul> <li>Compute instances</li> </ul> <p></p> <ul> <li>Network topology</li> </ul> <p>.</p> <p>Checkpoints Lucas</p> <ul> <li>Aba projects </li> </ul> <p></p> <ul> <li>Aba users</li> </ul> <p></p> <ul> <li>Compute overview</li> </ul> <p></p> <ul> <li>Compute instances</li> </ul> <p></p> <ul> <li>Network topology</li> </ul> <p>.</p> <p>Exerc\u00edcio</p> <p>Voc\u00ea \u00e9 o CTO (Chief Technology Officer) de uma grande empresa com sede em v\u00e1rias capitais no Brasil e precisa implantar um sistema cr\u00edtico, de baixo custo e com dados sigilosos para a \u00e1rea operacional.</p> <p>a.Voc\u00ea escolheria Public Cloud ou Private Cloud?</p> <p>b. Agora explique para ao RH por que voc\u00ea precisa de um time de DevOps.</p> <p>Considerando o mesmo sistema cr\u00edtico, agora sua equipe dever\u00e1 planejar e implementar um ambiente resiliente e capaz de mitigar poss\u00edveis interrup\u00e7\u00f5es/indisponibilidades. Para isso, identifiquem quais s\u00e3o as principais amea\u00e7as que podem colocar sua infraestrutura em risco, e descreva as principais a\u00e7\u00f5es que possibilitem o restabelecimento de todas as aplica\u00e7\u00f5es de forma r\u00e1pida e organizada caso algum evento cause uma interrup\u00e7\u00e3o ou incidente de seguran\u00e7a. Para isso monte um plano de DR e HA que considere entre as a\u00e7\u00f5es:</p> <p>Mapeamento das principais amea\u00e7as que podem colocar em riscos o seu ambiente.</p> <p>Elenque e priorize as a\u00e7\u00f5es para a recupera\u00e7\u00e3o de seu ambiente em uma poss\u00edvel interrup\u00e7\u00e3o/desastre.</p> <p>Como sua equipe ir\u00e1 tratar a pol\u00edtica de backup?</p> <p>Considerando poss\u00edveis instabilidades e problemas, descreva como alta disponibilidade ser\u00e1 implementada em sua infraestrutura.</p>"},{"location":"roteiro4/main/#4-respostas","title":"4. Respostas","text":"<p>a. Para um sistema cr\u00edtico com dados sigilosos e baixo custo, uma solu\u00e7\u00e3o h\u00edbrida pode ser a melhor escolha: utilizar Private Cloud para os dados sens\u00edveis e partes cr\u00edticas do sistema, e Public Cloud para cargas de trabalho menos sens\u00edveis ou para aumentar a escalabilidade, dependendo da demanda. A Private Cloud proporcionaria maior seguran\u00e7a e controle sobre os dados sigilosos, enquanto a Public Cloud pode ser usada para escalabilidade e reduzir custos em \u00e1reas que n\u00e3o envolvem dados sens\u00edveis.</p> <p>b. Um time de DevOps \u00e9 essencial para garantir a integra\u00e7\u00e3o cont\u00ednua e entrega cont\u00ednua (CI/CD) do software, permitindo que as atualiza\u00e7\u00f5es sejam implementadas rapidamente e com qualidade. Al\u00e9m disso, o DevOps promove uma cultura de colabora\u00e7\u00e3o entre as equipes de desenvolvimento e opera\u00e7\u00f5es, o que \u00e9 crucial para manter a infraestrutura est\u00e1vel e eficiente, especialmente em um ambiente cr\u00edtico.</p> <p>c. Principais amea\u00e7as:</p> <ul> <li>falhas de hardware;</li> <li>incidentes de seguran\u00e7a (ataques cibern\u00e9ticos);</li> <li> <p>falhas de conectividade;</p> <p>A\u00e7\u00f5es para recupera\u00e7\u00e3o:</p> </li> <li> <p>Implementar redund\u00e2ncia de hardware e rede para minimizar o impacto de falhas;</p> </li> <li>Criar um plano de resposta a incidentes que inclua procedimentos claros para identificar, conter e remediar ataques cibern\u00e9ticos;</li> <li>backups regulares e testes de restaura\u00e7\u00e3o para garantir que os dados possam ser recuperados rapidamente em caso de perda;</li> </ul> <p>Pol\u00edtica de backup:</p> <p>Para a pol\u00edtica de backup, recomenda-se realizar backups di\u00e1rios dos dados cr\u00edticos e armazen\u00e1-los em uma localiza\u00e7\u00e3o segura, preferencialmente fora do local principal. Al\u00e9m disso, \u00e9 importante testar periodicamente a restaura\u00e7\u00e3o dos backups para garantir que os dados possam ser recuperados com sucesso.</p> <p>Alta disponibilidade: Para implementar alta disponibilidade, recomenda-se utilizar balanceadores de carga para distribuir o tr\u00e1fego entre v\u00e1rias inst\u00e2ncias do sistema, como o Nginx, por exemplo. Al\u00e9m disso, \u00e9 importante ter uma arquitetura de microservi\u00e7os, onde cada servi\u00e7o pode ser escalado independentemente. Utilizar clusters de banco de dados e replica\u00e7\u00e3o de dados tamb\u00e9m \u00e9 essencial para garantir que o sistema permane\u00e7a dispon\u00edvel mesmo em caso de falhas em uma parte da infraestrutura.</p>"}]}